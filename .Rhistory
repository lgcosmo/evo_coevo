x_wB = 1 - sx*(A[2,1]*yp + A[2,2]*(1-yp)) #Computing the fitness of allele B for the victim species
x_avg_w = xp*x_wA + (1-xp)*x_wB #Computing the average fitness of the population of the victim species
y_wA = 1 + sy*(A[1,1]*xp + A[2,1]*(1-xp)) #Computing the fitness of allele A for the exploiter species
y_wB = 1 + sy*(A[1,2]*xp + A[2,2]*(1-xp)) #Computing the fitness of allele B for the exploiter species
y_avg_w = yp*y_wA + (1-yp)*y_wB #Computing the average fitness of the population of the exploiter species
# Step (4)
x_dp[t+1]=xp + ((xp*(1-xp)*(x_wA-x_wB))/x_avg_w) #Using Wright's equaiton to compute frequency of A in the next generation for the victim species
y_dp[t+1]=yp + ((yp*(1-yp)*(y_wA-y_wB))/y_avg_w) #Using Wright's equaiton to compute frequency of A in the next generation for the exploiter species
}
r=data.frame(x_dp, y_dp, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
A=matrix(data=c(1,1,0,1), nrow=2, ncol=2)
View(A)
rownames(A)=c("Ax", "Bx") #Changing row names to facilitate visualization
rownames(A)=c("Ax", "Bx") #Changing row names to facilitate visualization
colnames(A)=c("Ay", "By") #Changing column names to facilitate visualization
View(A)
#Running the coevolutionary model
r=coevo(A=A, sx=0.1, sy=0.1, tmax=100, p0_y=0.2, p0_x=0.2)
View(r)
library(ggplot2)
library(ggpubr)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.1, sy=0.2, tmax=100, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.2, sy=0.1, tmax=100, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
A=matrix(data=c(1,0,0,1), nrow=2, ncol=2)
#Running the coevolutionary model
r=coevo(A=A, sx=0.1, sy=0.1, tmax=1000, p0_y=0.2, p0_x=0.2)
library(ggplot2)
library(ggpubr)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.1, sy=0.1, tmax=5000, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.15, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
library(ggplot2)
library(ggpubr)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
m1=0.1
m2=0.11
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=0.1
m2=0.11
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=0.2
m2=0.1
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=0.11
m2=0.1
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=0.1
m2=0.1
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=0.3
m2=0.1
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=1/(1-sx)
m2=1/(1+sy)
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.02, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.03, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.04, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.02, sy=0.01, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.05, sy=0.01, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.01, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.01, a=0.1, tmax=1000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.01, a=0.1, tmax=1000, z0_x=5, z0_y=1, h=0.1, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.01, a=0.1, tmax=1000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=1000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=100, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.1, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.5, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.5, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.01, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=sx/(1-sx)
m2=sy/(1+sy)
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.01, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=50, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
#m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m1=sx/(1+sx)
m2=sy/(1+sy)
dlnw1 = m1*(zy-zx)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.01, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=500, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.01, sy=0.05, a=0.1, tmax=1000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
