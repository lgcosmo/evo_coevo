}
r=coevo(a1=0.1, a2=0.1, tmax=100, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(a1=0.1, a2=0.1, tmax=10, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(a1=0.1, a2=0.1, tmax=100, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(a1=0.2, a2=0.1, tmax=100, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(s1, s2, h, varz, tmax, z0_1, z0_2){ #Step (1)
dz1 = c() #Creating vector to store values of the mean trait value of the population of species 1
dz2 = c() #Creating vector to store values of the mean trait value of the population of species 2
dz1[1] = z0_1 #Setting initial mean trait value in the population of species 1
dz2[1] = z0_2 #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
z1 = dz1[t] #Setting the mean trait value at the current generation of the population of species 1
z2 = dz2[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=s1*2*a*(exp(-a*(z2-z1)^2)/(1+exp(-a*(z2-z1)^2)))
m2=s2*2*a*(exp(-a*(z2-z1)^2)/(1-exp(-a*(z2-z1)^2)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(z2-z1)
dlnw2 = m2*(z2-z1)
# Step (4)
dz1[t+1]=z1 + h*varz*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dz2[t+1]=z2 + h*varz*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dz1, dz2, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(s1=0.2, s2=0.1, tmax=100, z0_1=1, z0_2=2, h=0.5, varz=0.5)
coevo<-function(s1, s2, a, h, varz, tmax, z0_1, z0_2){ #Step (1)
dz1 = c() #Creating vector to store values of the mean trait value of the population of species 1
dz2 = c() #Creating vector to store values of the mean trait value of the population of species 2
dz1[1] = z0_1 #Setting initial mean trait value in the population of species 1
dz2[1] = z0_2 #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
z1 = dz1[t] #Setting the mean trait value at the current generation of the population of species 1
z2 = dz2[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=s1*2*a*(exp(-a*(z2-z1)^2)/(1+exp(-a*(z2-z1)^2)))
m2=s2*2*a*(exp(-a*(z2-z1)^2)/(1-exp(-a*(z2-z1)^2)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(z2-z1)
dlnw2 = m2*(z2-z1)
# Step (4)
dz1[t+1]=z1 + h*varz*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dz2[t+1]=z2 + h*varz*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dz1, dz2, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(s1=0.2, s2=0.1, a=0.1, tmax=100, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.1, a=0.1, tmax=100, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.5, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.9, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=2, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=1, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.5, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.6, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.1, a=0.1, tmax=1000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(s1=0.1, s2=0.1, a=0.1, tmax=5000, z0_1=1, z0_2=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
D(expression(log(1-exp(-a*((zy-zx)^2 + var_xy)))), "zx")
D(expression(log(1-exp(-a*((zx-zy)^2 + var_xy)))), "zx")
D(expression(log(1+exp(-a*((zx-zy)^2 + var_xy)))), "zy")
coevo<-function(s1, s2, a, h, varz, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=s1*2*a*(exp(-a*(zx-zy)^2)/(1-exp(-a*(zx-zy)^2)))
m2=s2*2*a*(exp(-a*(zx-zy)^2)/(1+exp(-a*(zx-zy)^2)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dz1[t+1]=zx + h*varz*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dz2[t+1]=zy + h*varz*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=1, z0_y=2, h=0.5, varz=0.5)
coevo<-function(sx, sy, a, h, varz, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=sx*2*a*(exp(-a*(zx-zy)^2)/(1-exp(-a*(zx-zy)^2)))
m2=sy*2*a*(exp(-a*(zx-zy)^2)/(1+exp(-a*(zx-zy)^2)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dz1[t+1]=zx + h*varz*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dz2[t+1]=zy + h*varz*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=1, z0_y=2, h=0.5, varz=0.5)
coevo<-function(sx, sy, a, h, varz, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=sx*2*a*(exp(-a*(zx-zy)^2)/(1-exp(-a*(zx-zy)^2)))
m2=sy*2*a*(exp(-a*(zx-zy)^2)/(1+exp(-a*(zx-zy)^2)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*varz*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*varz*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=1, z0_y=2, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
library(ggplot2)
library(ggpubr)
ggplot()+
geom_line(data=r, aes(x=t, y=dz2), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dz1), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
coevo<-function(sx, sy, a, h, varz, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=sx*2*a*(exp(-a*(zx-zy)^2)/(1-sx*exp(-a*(zx-zy)^2)))
m2=sy*2*a*(exp(-a*(zx-zy)^2)/(1+sy*exp(-a*(zx-zy)^2)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*varz*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*varz*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.2, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.3, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.2, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.15, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.12, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.13, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.14, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.2, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, varz=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
D(expression(log(1-sx*exp(-a*((zx-zy)^2 + var_xy)))), "zx")
coevo<-function(sx, sy, a, h, v_zx, v_zy, tmax, z0_x, z0_y){ #Step (1)
dzx = c() #Creating vector to store values of the mean trait value of the population of species 1
dzy = c() #Creating vector to store values of the mean trait value of the population of species 2
dzx[1] = z0_x #Setting initial mean trait value in the population of species 1
dzy[1] = z0_y #Setting initial mean trait value in the population of species 1
#For loop to iterate over the equation - here we will use Lande's equation
for(t in 1:(tmax-1)){
# Step (2)
zx = dzx[t] #Setting the mean trait value at the current generation of the population of species 1
zy = dzy[t] #Setting the mean trait value at the current generation of the population of species 2
# Step (3)
m1=sx*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1-sx*exp(-a*((zx-zy)^2+v_zx+v_zy)))
m2=sy*2*a*(exp(-a*((zx-zy)^2+v_zx+v_zy)))/(1+sy*exp(-a*((zx-zy)^2+v_zx+v_zy)))
#m1=0.5
#m2=0.7
dlnw1 = m1*(zx-zy)
dlnw2 = m2*(zx-zy)
# Step (4)
dzx[t+1]=zx + h*v_zx*dlnw1 #Using Lande's equation to compute mean trait value at the next generation of the population of species 1
dzy[t+1]=zy + h*v_zy*dlnw2 #Using Lande's equation to compute mean trait value at the next generation of the population of species 2
}
r=data.frame(dzx, dzy, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.11, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.15, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.15, a=0.1, tmax=50000, z0_x=2, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.15, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=2, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.1, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
r=coevo(sx=0.1, sy=0.15, a=0.1, tmax=5000, z0_x=5, z0_y=1, h=0.5, v_zx=0.5, v_zy=0.5)
ggplot()+
geom_line(data=r, aes(x=t, y=dzx), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=dzy), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
D(expression(log(1-sx*exp(-a*((zx-zy)^2 + var_xy)))), "zx")
D(expression(log(1-sx*exp(-a*((zx-zy)^2 + var_xy)))), "zx")
D(expression(log(1+sy*exp(-a*((zx-zy)^2 + var_xy)))), "zx")
D(expression(log(1-sx*exp(-a*((zx-zy)^2 + var_xy)))), "zx")
D(expression(log(1+sy*exp(-a*((zx-zy)^2 + var_xy)))), "zy")
# Step (1)
#Defining a function that takes as input the following parameters:
#A=Matrix of effects between alleles
#sx=Overall strength of ecological interactions on fitness of the victim species
#sy=Overall strength of ecological interactions on fitness of the exploiter species
#p0_x=Initial frequency of allele A of the victim species
#p0_y=Initial frequency of allele A of the exploiter
coevo<-function(A, sx, sy, tmax, p0_y, p0_x){ #Step (1)
x_dp = c() #Creating vector to store values of the frequency of allele A for the victim species
y_dp = c() #Creating vector to store values of the frequency of allele A for the exploiter species
x_dp[1] = p0_x #Setting initial frequency of allele A for the victim species
y_dp[1] = p0_y #Setting initial frequency of allele A for the exploiter species
#For loop to iterate over the equation
for(t in 1:(tmax-1)){
# Step (2)
xp = x_dp[t] #Setting current frequency of allele A for the victim species
yp = y_dp[t] #Setting current frequency of allele A for the exploiter species
# Step (3)
x_wA = 1 - sx*(A[1,1]*yp + A[1,2]*(1-yp)) #Computing the fitness of allele A for the victim species
x_wB = 1 - sx*(A[2,1]*yp + A[2,2]*(1-yp)) #Computing the fitness of allele B for the victim species
x_avg_w = xp*x_wA + (1-xp)*x_wB #Computing the average fitness of the population of the victim species
y_wA = 1 + sy*(A[1,1]*xp + A[2,1]*(1-xp)) #Computing the fitness of allele A for the exploiter species
y_wB = 1 + sy*(A[1,2]*xp + A[2,2]*(1-xp)) #Computing the fitness of allele B for the exploiter species
y_avg_w = yp*y_wA + (1-yp)*y_wB #Computing the average fitness of the population of the exploiter species
# Step (4)
x_dp[t+1]=xp + ((xp*(1-xp)*(x_wA-x_wB))/x_avg_w) #Using Wright's equaiton to compute frequency of A in the next generation for the victim species
y_dp[t+1]=yp + ((yp*(1-yp)*(y_wA-y_wB))/y_avg_w) #Using Wright's equaiton to compute frequency of A in the next generation for the exploiter species
}
r=data.frame(x_dp, y_dp, t=1:tmax) # Step (5), creating a data frame with frequencies over time
return(r)
}
A=matrix(data=c(1,1,0,1), nrow=2, ncol=2)
rownames(A)=c("Ax", "Bx") #Changing row names to facilitate visualization
colnames(A)=c("Ay", "By") #Changing column names to facilitate visualization
library(ggplot2)
library(ggpubr)
r=coevo(A=A, sx=0.3, sy=0.1, tmax=100, p0_y=0.2, p0_x=0.2)
#Plotting the results
library(ggplot2)
library(ggpubr)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.2, sy=0.1, tmax=100, p0_y=0.2, p0_x=0.2)
library(ggplot2)
library(ggpubr)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
A=matrix(data=c(1,0,0,1), nrow=2, ncol=2)
rownames(A)=c("Ax", "Bx") #Changing row names to facilitate visualization
colnames(A)=c("Ay", "By") #Changing column names to facilitate visualization
#Running the coevolutionary model
r=coevo(A=A, sx=0.1, sy=0.1, tmax=100, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.5, sy=0.5, tmax=100, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.5, sy=0.5, tmax=1000, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
#Running the coevolutionary model
r=coevo(A=A, sx=0.1, sy=0.1, tmax=1000, p0_y=0.2, p0_x=0.2)
ggplot()+
geom_line(data=r, aes(x=t, y=x_dp), color="royalblue3")+ # Frequency of allele A for victims, in blue
geom_line(data=r, aes(x=t, y=y_dp), color="firebrick3")+ #Frequency of allele A for exploiters, in red
xlab("Generations")+ylab("Frequency of allele A")+
theme_pubr()
