"0",""
"0","coevo_network<-function(incidence_matrix, m, z0, theta, h, var_z, tmax){"
"0","  "
"0","  # Setting up adjacency matrix and the data structure to store mean trait values over time for the simulation"
"0","  A=adjacency_matrix(incidence_matrix=incidence_matrix, binary=TRUE)"
"0","  n_sp=nrow(A)"
"0","  dz=matrix(NA, nrow = tmax, ncol = n_sp)"
"0","  "
"0","  dz[1,]<-z0 # Setting initial trait values"
"0","  "
"0","  for(t in 1:(tmax-1)){"
"0","    "
"0","    z = dz[t, ] # Step (1)"
"0","    "
"0","    Q = A / rowSums(A) # Step (2)"
"0","    Q = Q * m # Step (2)"
"0","    "
"0","    z_dif = t(A*z) - A*z # Step (3)"
"0","    "
"0","    Q_dif = Q * z_dif # Step (4)"
"0","    "
"0","    mut_sel = rowSums(Q_dif) # Step (5)"
"0","    env_sel = (1 - m)*(theta - z) # Step (5)"
"0","    dlnw = mut_sel+env_sel # Step (5)"
"0","    "
"0","    dz[t+1, ] = z + h*var_z*dlnw # Step (6)"
"0","    "
"0","  }"
"0","  "
"0","  # Setting up a data farme with results"
"0","  dz_df<-as.data.frame(dz)"
"0","  dz_df$time<-1:tmax"
"0","  names(dz_df)[1:n_sp]<-paste0(""SP"", 1:n_sp)"
"0","  dz_df<-melt(dz_df, id.vars=""time"")"
"0","  "
"0","  return(dz_df)"
"0","  "
"0","}"
"0",""
