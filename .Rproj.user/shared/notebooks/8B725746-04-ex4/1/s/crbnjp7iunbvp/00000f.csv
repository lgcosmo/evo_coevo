"0",""
"0","# Step (1)"
"0",""
"0","#Defining a function that takes as input the following parameters:"
"0",""
"0","#A=Matrix of effects between alleles"
"0","#sx=Overall strength of ecological interactions on fitness of the victim species"
"0","#sy=Overall strength of ecological interactions on fitness of the exploiter species"
"0","#p0_x=Initial frequency of allele A of the victim species"
"0","#p0_y=Initial frequency of allele A of the exploiter"
"0",""
"0","coevo<-function(A, sx, sy, tmax, p0_y, p0_x){ #Step (1)"
"0","  "
"0","x_dp = c() #Creating vector to store values of the frequency of allele A for the victim species"
"0","y_dp = c() #Creating vector to store values of the frequency of allele A for the exploiter species"
"0",""
"0","x_dp[1] = p0_x #Setting initial frequency of allele A for the victim species"
"0","y_dp[1] = p0_y #Setting initial frequency of allele A for the exploiter species"
"0",""
"0","#For loop to iterate over the equation"
"0","for(t in 1:(tmax-1)){"
"0","  "
"0","  # Step (2)"
"0","  "
"0","  xp = x_dp[t] #Setting current frequency of allele A for the victim species"
"0","  yp = y_dp[t] #Setting current frequency of allele A for the exploiter species"
"0","  "
"0","  # Step (3)"
"0",""
"0","  x_wA = 1 - sx*(A[1,1]*yp + A[1,2]*(1-yp)) #Computing the fitness of allele A for the victim species"
"0","  x_wB = 1 - sx*(A[2,1]*yp + A[2,2]*(1-yp)) #Computing the fitness of allele B for the victim species"
"0","  x_avg_w = xp*x_wA + (1-xp)*x_wB #Computing the average fitness of the population of the victim species"
"0",""
"0","  y_wA = 1 + sy*(A[1,1]*xp + A[2,1]*(1-xp)) #Computing the fitness of allele A for the exploiter species"
"0","  y_wB = 1 + sy*(A[1,2]*xp + A[2,2]*(1-xp)) #Computing the fitness of allele B for the exploiter species"
"0","  y_avg_w = yp*y_wA + (1-yp)*y_wB #Computing the average fitness of the population of the exploiter species"
"0","  "
"0","  # Step (4)"
"0","  "
"0","  x_dp[t+1]=xp + ((xp*(1-xp)*(x_wA-x_wB))/x_avg_w) #Using Wright's equaiton to compute frequency of A in the next generation for the victim species"
"0","  y_dp[t+1]=yp + ((yp*(1-yp)*(y_wA-y_wB))/y_avg_w) #Using Wright's equaiton to compute frequency of A in the next generation for the exploiter species"
"0","  "
"0","}"
"0",""
"0","r=data.frame(x_dp, y_dp, t=1:tmax) # Step (5), creating a data frame with frequencies over time"
"0",""
"0","return(r)"
"0","  "
"0","}"
"0",""
